setwd("C:/Users/Robin/OneDrive/Dokumente/MRes/1. RSV with Riley/Model parameter optimisation")

set.seed(123)
require("deSolve")
require("sfsmisc")

## Load the data table
data = read.table("Tanner et al 2012 data IF-RSV-Co.csv",header=TRUE,sep=",")
IF_data = data$IF_data
RSV_data = data$RSV_data
Co_data = data$Co_data


## This function goes into the ODE solver
seir_12 <- function(t, state, vparameters) {
	with(as.list(c(state, vparameters)), {
		dS_12 <- nu + omega_12 * R_12 + omega_1x * S_1x + omega_x2 * S_x2 - beta_01 * (1 + epsilon_1 * cos(2*pi * (t-phi_1)/52)) * (I_1o + I_1x + I_12)/N * S_12 - beta_02 * (1 + epsilon_2 * cos(2*pi * (t-phi_2)/52)) * (I_o2 + I_x2 + I_12)/N * S_12 - beta_012 * (1 + epsilon_12 * cos(2*pi * (t-phi_12)/52)) * I_12/N * S_12 - mu * S_12
		dE_1o <- beta_01 * (1 + epsilon_1 * cos(2*pi * (t-phi_1)/52)) * (I_1o + I_1x + I_12)/N * S_12 - beta_02E1o * (1 + epsilon_2 * cos(2*pi * (t-phi_2)/52)) * (I_o2 + I_x2 + I_12)/N * E_1o - (sigma_1 + mu) * E_1o
		dE_o2 <- beta_02 * (1 + epsilon_2 * cos(2*pi * (t-phi_2)/52)) * (I_o2 + I_x2 + I_12)/N * S_12 - beta_01Eo2 * (1 + epsilon_1 * cos(2*pi * (t-phi_1)/52)) * (I_1o + I_1x + I_12)/N * E_o2 - (sigma_2 + mu) * E_o2
		dI_1o <- sigma_1 * E_1o - (gamma_1 + mu) * I_1o
		dI_o2 <- sigma_2 * E_o2 - (gamma_2 + mu) * I_o2
		dE_12 <- beta_02E1o * (1 + epsilon_2 * cos(2*pi * (t-phi_2)/52)) * (I_o2 + I_x2 + I_12)/N * E_1o + beta_01Eo2 * (1 + epsilon_1 * cos(2*pi * (t-phi_1)/52)) * (I_1o + I_1x + I_12)/N * E_o2 + beta_012 * (1 + epsilon_12 * cos(2*pi * (t-phi_12)/52)) * I_12/N * S_12 - (sigma_12 + mu) * E_12
		dI_12 <- sigma_12 * E_12 - (gamma_12 + mu) * I_12
		dS_1x <- (1-rho_2) * gamma_2 * I_o2 - beta_01 * (1 + epsilon_1 * cos(2*pi * (t-phi_1)/52)) * (I_1o + I_1x + I_12)/N * S_1x - mu * S_1x - omega_1x * S_1x
		dS_x2 <- (1-rho_1) * gamma_1 * I_1o - beta_02 * (1 + epsilon_2 * cos(2*pi * (t-phi_2)/52)) * (I_o2 + I_x2 + I_12)/N * S_x2 - mu * S_x2 - omega_x2 * S_x2
		dE_1x <- beta_01 * (1 + epsilon_1 * cos(2*pi * (t-phi_1)/52)) * (I_1o + I_1x + I_12)/N * S_1x - (sigma_1 + mu) * E_1x
		dE_x2 <- beta_02 * (1 + epsilon_2 * cos(2*pi * (t-phi_2)/52)) * (I_o2 + I_x2 + I_12)/N * S_x2 - (sigma_2 + mu) * E_x2
		dI_1x <- sigma_1 * E_1x - (gamma_1 + mu) * I_1x
		dI_x2 <- sigma_2 * E_x2 - (gamma_2 + mu) * I_x2
		dR_12 <- (1-rho_12) * gamma_12 * I_12 + (1-rho_1) * gamma_1 * I_1x + (1-rho_2) * gamma_2 * I_x2 - mu * R_12 - omega_12 * R_12
		(list(c(dS_12, dE_1o, dE_o2, dI_1o, dI_o2, dE_12, dI_12, dS_1x, dS_x2, dE_1x, dE_x2, dI_1x, dI_x2, dR_12)))
	})
}

## Define initial state variables
N <- 10000							# Overall population size
S_12 <- N-2							# Individuals susceptible to IF and RSV
E_1o <- 1							# Individuals exposed to IF and susceptible to RSV
E_o2 <- 1							# Individuals exposed to RSV and susceptible to IF
I_1o <- 0							# Individuals infectious with IF and susceptible to RSV
I_o2 <- 0							# Individuals infectious with RSV and susceptible to IF
E_12 <- 0							# Individuals exposed to IF and RSV
I_12 <- 0							# Individuals infectious with IF and RSV
S_1x <- 0							# Individuals susceptible to IF and recovered from/immune to RSV
S_x2 <- 0 							# Individuals susceptible to RSV and recovered from/immune to IF
E_1x <- 0							# Individuals exposed to IF and recovered from/immune to RSV
E_x2 <- 0							# Individuals exposed to RSV and recovered from/immune to IF
I_1x <- 0							# Individuals infectious with IF and recovered from/immune to RSV
I_x2 <- 0							# Individuals infectious with RSV and recovered from/immune to IF
R_12 <- 0							# Individuals recovered from IF and RSV

state <- c(S_12=S_12, E_1o=E_1o, E_o2=E_o2, I_1o=I_1o, I_o2=I_o2, E_12=E_12, I_12=I_12, 
			S_1x=S_1x, S_x2=S_x2, E_1x=E_1x, E_x2=E_x2, I_1x=I_1x, I_x2=I_x2, R_12=R_12)

## Define the parameters (use weekly rates)
nu <- 12/1000/52					# Birth rate
mu <- 9/1000/52						# Background death rate
R0_1 <- 1.271976						# Basic reproductive number for IF
R0_2 <- 1.7							# Basic reproductive number for RSV
sigma_1 <- 1/(1.6/7)				# Inverse of latent period for IF
sigma_2 <- 1/(4/7)					# Inverse of latent period for RSV
sigma_12 <- 1/(2/7)					# Inverse of latent period for co-inf
gamma_1 <- 1/(1/7)					# Inverse of infectious period for IF
gamma_2 <- 1/(6.7/7)				# Inverse of infectious period for RSV
gamma_12 <- 1/(3/7)					# Inverse of infectious period for co-inf
beta_01 <- R0_1 * (gamma_1 + mu)	# Rate at which susceptible individuals are exposed for IF
beta_02 <- R0_2 * (gamma_2 + mu)	# Rate at which susceptible individuals are exposed for disease RSV
beta_02E1o <- 1.776414				# Rate at which susceptible individuals already exposed to disease IF are exposed to disease RSV (current value assumes that it is the same as the beta for RSV)
beta_01Eo2 <- 9.100225				# Rate at which susceptible individuals already exposed to disease RSV are exposed to disease IF (current value assumes that it is the same as the beta for IF based on best guess)
beta_012 <-	0.1776414				# Rate at which fully susceptible individuals become exposed to co-inf (current value is 0.1 of the beta for RSV)
rho_1 <- 0.0005						# Probablity of infection-induced death for disease IF
rho_2 <- 0							# Probablity of infection-induced death for disease RSV
rho_12 <- 0.001						# Probablity of infection-induced death for co-inf
omega_1x <- 0						# Inverse of period of immunity for those immune to RSV 
omega_x2 <- 0						# Inverse of period of immunity for those immune to IF
omega_12 <- 0						# Inverse of period of immunity for those immune to IF and RSV
phi_1 <- 0							# Time where transmission for IF is maximal
phi_2 <- 0							# Time where transmission for RSV is maximal
phi_12 <- 0							# Time where transmission for co-inf is maximal
epsilon_1 <- 0.1384911					# Amplitude of seasonality for IF
epsilon_2 <- 0.15					# Amplitude of seasonality for RSV
epsilon_12 <- 0.15					# Amplitude of seasonality for co-inf
vparameters <- c(nu=nu, mu=mu, R0_1=R0_1, R0_2=R0_2, sigma_1=sigma_1, sigma_2=sigma_2, sigma_12=sigma_12,
				gamma_1=gamma_1, gamma_2=gamma_2, gamma_12=gamma_12, beta_01=beta_01, beta_02=beta_02,
				beta_02E1o=beta_02E1o, beta_01Eo2=beta_01Eo2, beta_012=beta_012, 
				epsilon_1=epsilon_1, epsilon_2=epsilon_2, epsilon_12=epsilon_12,
				rho_1=rho_1, rho_2=rho_2, rho_12=rho_12, 
				omega_1x=omega_1x, omega_x2=omega_x2, omega_12=omega_12, 
				phi_1=phi_1, phi_2=phi_2, phi_12=phi_12)

## Define the time sequence of the model
vt <- seq(0, 32, by = 1) 		

## Define the overall model
seirmodel_12 <- as.data.frame(lsoda(state, vt, seir_12, vparameters))
seirmodel_12 = subset(seirmodel_12,time%in%data$time)

## Extract the incidence from the overall model and normalise it for IF, RSV and co-inf
IF_model = beta_01 * (1 + epsilon_1 * cos(2*pi * (seirmodel_12$time-phi_1)/52)) * (seirmodel_12$I_1o + seirmodel_12$I_1x + seirmodel_12$I_12)/N * seirmodel_12$S_12 + beta_01 * (1 + epsilon_1 * cos(2*pi * (seirmodel_12$time-phi_1)/52)) * (seirmodel_12$I_1o + seirmodel_12$I_1x + seirmodel_12$I_12)/N * seirmodel_12$S_1x
IF_model = IF_model * sum(IF_data)/sum(IF_model)
RSV_model = beta_02 * (1 + epsilon_2 * cos(2*pi * (seirmodel_12$time-phi_2)/52)) * (seirmodel_12$I_o2 + seirmodel_12$I_x2 + seirmodel_12$I_12)/N * seirmodel_12$S_12 + beta_02 * (1 + epsilon_2 * cos(2*pi * (seirmodel_12$time-phi_2)/52)) * (seirmodel_12$I_o2 + seirmodel_12$I_x2 + seirmodel_12$I_12)/N * seirmodel_12$S_x2
RSV_model = RSV_model * sum(RSV_data)/sum(RSV_model)
Co_model = beta_02E1o * (1 + epsilon_2 * cos(2*pi * (seirmodel_12$time-phi_2)/52)) * (seirmodel_12$I_o2 + seirmodel_12$I_x2 + seirmodel_12$I_12)/N * seirmodel_12$E_1o + beta_01Eo2 * (1 + epsilon_1 * cos(2*pi * (seirmodel_12$time-phi_1)/52)) * (seirmodel_12$I_1o + seirmodel_12$I_1x + seirmodel_12$I_12)/N * seirmodel_12$E_o2 + beta_012 * (1 + epsilon_12 * cos(2*pi * (seirmodel_12$time-phi_12)/52)) * seirmodel_12$I_12/N * seirmodel_12$S_12
Co_model = Co_model * sum(Co_data)/sum(Co_model) 

## Plot the results
plot(data$time,data$IF_data, pch = c(16), col=c(1), ylim=c(0,120), xlab="Time (weeks)",ylab="New cases/week")		
points(data$time,data$RSV_data, pch = c(16), col=c(2))
points(data$time,data$Co_data, pch = c(16), col=c(3))
lines(seirmodel_12$time,IF_model,col=1,lwd=2, lty=2)								
lines(seirmodel_12$time,RSV_model,col=2,lwd=2, lty=2)								
lines(seirmodel_12$time,Co_model,col=3,lwd=2, lty=2)
legend("topright",legend=c("Data IF","Data RSV","Data Co-inf","Model IF","Model RSV","Model Co-inf"),pch = c(16,16,16,NA_integer_,NA_integer_,NA_integer_), col=c(1,2,3,1,2,3),lty=c(0,0,0,2,2,2),lwd=c(1,1,1,2,2,2),bty="n")
